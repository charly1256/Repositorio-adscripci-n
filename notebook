import numpy as np
import backend as bend

# load data
data = np.loadtxt('experiment_data.txt')
data_t,data_x = data[:,0],data[:,1]
data_x_sigma = 0.3

# priors

def uniform_prior(xmin,xmax):
    return lambda _ : 1/(xmax-xmin) if _ < xmax and _ > xmin else 0

def normal_prior(x0,sigma):
    return lambda _ : np.exp(-(_-x0)**2/2/sigma**2)/(2*np.pi*sigma**2)**0.5

x0_prior = uniform_prior(0.0,3.0)
a1_prior = uniform_prior(-10.0,10.0)
b1_prior = uniform_prior(0.0,5.0)
c21_prior = uniform_prior(-10.0,10.0)

# parameters

x0 = bend.FittingParameter(1.0,'x0',1,x0_prior)
v0 = bend.FixedParameter(0.0,'v0',1)
a1 = bend.FittingParameter(0.0, 'a', 1, a1_prior)
b1 = bend.FittingParameter(0.5,'b',1,b1_prior)
c21 = bend.FittingParameter(0.0,'c',(2,1),c21_prior)

parameters = [x0,v0,a1,b1,c21]

# set up main

model1 = bend.Main(parameters,data_t,data_x,data_x_sigma)

sampler,_,_,_ = model1.setup_sampler(100, 5000)
flat_samples = sampler.get_chain(flat=True)

# plots

label_list = model1.params_labels
bend.make_cornerplots(flat_samples,label_list)
